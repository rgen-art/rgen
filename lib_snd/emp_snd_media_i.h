//-----------------------------------------------------------------------------
// rgen.art
//-----------------------------------------------------------------------------
#ifndef EMP_SND_MEDIA_I_H
#define EMP_SND_MEDIA_I_H

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#include "emp_snd_state_e.h"

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
namespace emp { namespace snd {

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
EMP_NOCOPY(class, media_i)
public:
    media_i(void) {}
    virtual ~media_i(void) {}

    virtual void play(void) = 0;
    virtual void stop(void) = 0;
    virtual void destroy(void) = 0;
    virtual void pre_process(void) = 0;
    virtual EMP_RETURN bool move(float const a_fDelta) = 0;
    virtual EMP_RETURN float sample(c_size a_stChannel) = 0;
    virtual EMP_RETURN size_t channel_count(void) const = 0;
    virtual EMP_RETURN state_e state(void) const = 0;
};

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
} }

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#endif

