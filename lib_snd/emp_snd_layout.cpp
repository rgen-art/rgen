//-----------------------------------------------------------------------------
// rgen.art
//-----------------------------------------------------------------------------
#include "emp_snd_layout.h"

#include "emp_snd_synth_i.h"

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
namespace emp { namespace snd {

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
layout_c::layout_c(void):
m_sName(),
m_vCells()
{ destroy(); }

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
layout_c::~layout_c(void)
{}

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
EMP_RETURN bool layout_c::post_load(void)
{
    c_size stCount = m_vCells.count();
    for (size_t stIndex = 0; stIndex < stCount; ++stIndex)
    {
        cell_c& rCell = m_vCells.ref(stIndex);
        if (rCell.synth->load(rCell.index) == false)
        { return false; }
    }
    return stCount == constants::key_count;
}

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
void layout_c::destroy(void)
{ m_vCells.resize(0); }

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
/*void layout_c::set_default(emp::snd::synth_i* const a_pValue)
{
    c_size stCount = constants::key_count;
    m_vCells.resize(stCount);
    for (size_t stIndex = 0; stIndex < stCount; ++stIndex)
    {
        cell_c& rCell = m_vCells.ref(stIndex);
        rCell = cell_c();
        rCell.synth = a_pValue;
    }
}*/
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------

} }

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------

