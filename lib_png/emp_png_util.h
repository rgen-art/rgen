//-----------------------------------------------------------------------------
// rgen.art
//-----------------------------------------------------------------------------
#ifndef EMP_PNG_UTIL_H
#define EMP_PNG_UTIL_H

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
namespace emp::fs { EMP_FORWARD(enum, ui32, create_e) }

namespace emp::png {

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
EMP_RETURN bool load(c_astring& a_sPath, vector<ui8>& a_rvPixels, vector<ui8*>& a_rvpRows, ui32& a_ruiWidth, ui32& a_rui32Height, ui32& a_rui32Depth);
EMP_RETURN bool save(c_astring& a_sPath, vector<ui32> const& a_rvPixels, vector<ui8>& a_rvScratchPad, c_ui32 a_ui32Width, c_ui32 a_ui32Height, c_bool, fs::create_e a_eCreate, c_bool a_bAlpha);

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
namespace emp::jpg {

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
EMP_RETURN bool save(c_astring& a_sPath, vector<ui32> const& a_rvPixels, vector<ui8>& a_rvScratchPad, c_ui32 a_ui32Width, c_ui32 a_ui32Height, c_bool a_bCreateIntermediateDirectories, fs::c_create_e a_eCreate, c_bool a_bAlpha, int a_iQuality);

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
}

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#endif

