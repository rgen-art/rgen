//-----------------------------------------------------------------------------
// rgen.art
//-----------------------------------------------------------------------------
#include "emp_loc_localizer.h"

#include "emp_loc_locale.h"
#include "emp_loc_string.h"

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
#include "emp_loc_reflection.rfx.h"

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
namespace emp { namespace loc {

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
localizer_c* localizer_c::s_pInstance = nullptr;

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
localizer_c::localizer_c(void):
m_sLocale(),
m_pLocale(),
m_psu8NoTranslation()
{ }

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
localizer_c::~localizer_c(void)
{ destroy(); }

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
EMP_RETURN bool localizer_c::create(locale_c* const a_pLocale)
{
    m_sLocale = astring();
    m_pLocale = a_pLocale;
    EMP_RET_FALSE_IF(m_pLocale == nullptr);
    m_sLocale = m_pLocale->name();
    return true;
}

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
EMP_RETURN bool localizer_c::create(c_astring& a_sLocale)
{
    EMP_RET_FALSE_IF_NOT(create(EMP_STORE(locale_c)->get_object(a_sLocale)), "Locale not found #0", a_sLocale);
    return true;
}

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
void localizer_c::destroy(void)
{}

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
EMP_RETURN bool localizer_c::is_valid_language(c_astring& a_sValue)
{ return EMP_STORE(locale_c)->get_object(a_sValue) != nullptr; }

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
EMP_RETURN c_u8string& localizer_c::get_string(string_s const& a_rString) const
{
    if (m_pLocale != nullptr)
    { return m_pLocale->get_string(a_rString); }
    get_error(a_rString.key, astring(), *m_psu8NoTranslation);
    return *m_psu8NoTranslation;
}

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
} }

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
