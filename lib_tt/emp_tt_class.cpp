//-----------------------------------------------------------------------------
// rgen.art
//-----------------------------------------------------------------------------
#include "emp_tt_class.h"

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
namespace emp { namespace tt {

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
struct test_1
{
    virtual ~test_1(void) {}
    bool pre_load(void) { return true; };
};

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
EMP_NOCOPY_BASE(struct, test_2, public, test_1) };

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
struct test_3 {};

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
static_assert(emp::tt::equal<test_2::tbases, std::tuple<test_1>>::value, "");
static_assert(has_function_pre_load<test_3, bool(void)>::value == false, "");
static_assert(has_function_pre_load<test_2, bool(void)>::value, "");
static_assert(has_function_pre_load<test_1, bool(void)>::value, "");

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
static_assert(has_typedef_tbases<test_3>::value == false, "");
static_assert(has_typedef_tbases<test_2>::value, "");

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
} }
