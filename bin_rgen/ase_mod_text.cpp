//-----------------------------------------------------------------------------
// rgen.art
//-----------------------------------------------------------------------------
#include "ase_mod_text.h"

//#include "ase_gui_skin.h"

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
//#include "emp_gui_button.h"
#include "emp_gui_label.h"
//#include "emp_gui_skin.h"

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
namespace ase { namespace mod {

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
text_c::text_c(void):
m_pButton(),
m_pLabel()
{ }

//-----------------------------------------------------------------------------
//----------------------------------------------------------------------------
text_c::~text_c(void)
{ }

//-----------------------------------------------------------------------------
//----------------------------------------------------------------------------
EMP_RETURN bool text_c::post_load(void)
{
    if (tbase1::post_load() == false)
    { return false; }

    if (m_pLabel == nullptr)
    {
        EMP_LOG_ERROR("Failed to load m_pLabel");
        return false;
    }
    return true;
}

//-----------------------------------------------------------------------------
//----------------------------------------------------------------------------
EMP_RETURN bool text_c::public_create(void)
{
    m_pLabel->on_push.function_(emp::fct::function(this, &text_c::button_pushed));
    return true;
}

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
void text_c::public_destroy(void)
{
    // @@0 remove EMP_RFX_SAFE_DESTROY_DEALLOCATE(m_pLabel);

   // @@0 create if (m_pLabel != nullptr)
    //{ m_pLabel->destroy(); }
}

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
EMP_RETURN bool text_c::public_start(void)
{
    set_pause(false);
    return true;
}

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
emp::gui::return_e text_c::button_pushed(emp::gui::cpc_control_i EMP_SILENT(a_pSender), c_bool a_bValue, emp::gui::c_change_e EMP_SILENT(a_eChange))
{
    if (a_bValue)
    {
        emp::tt::silent(fire_next());
        return emp::gui::return_e::Consumed;
    }
    return emp::gui::return_e::Unused;
}

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
EMP_RETURN bool text_c::set_name(emp::loc::string_s const& a_eValue)
{
    EMP_RET_FALSE_IF_NOT(tbase1::set_name(a_eValue));

    m_pLabel->state().autosize.x_(false);
    m_pLabel->set_text(a_eValue);
    m_pLabel->state().autosize.x_(true);
    return m_pLabel->resize();
}

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
} }

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------

